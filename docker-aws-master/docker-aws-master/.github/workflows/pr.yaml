name: CI

on:
  #push:
  #  branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  swarm-http:
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"
    env:
      stackName: swarm-http

    runs-on: ubuntu-latest

    steps:

    - name: "Configure AWS Credentials"
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: # optional
        aws-region: ap-south-1
        mask-aws-account-id: true
        role-to-assume: # optional
        role-duration-seconds: # optional
        role-session-name: # optional
        role-external-id: # optional
      
    - name: Checkout branch
      uses: actions/checkout@v2

    - name: Install aws + cluster + app in Swarm mode and HTTP only
      run: |
        init=bin/init-start.sh
        chmod +x ${init}
        sed -i /mode=kubernetes/d ${init}
        sed -i /template=https/d ${init}
        sed -i /template=http-3/d ${init}
        sed -i /template=http-2/d ${init}
        sed -i s/master/test/ ${init}
        sed -i /TypeMaster=t3a.micro/d ${init}
        sed -i /TypeWorker=t3a.micro/d ${init}
        sed -i s/export' 'stack=.*$/export' 'stack=${stackName}-${GITHUB_SHA}/ ${init}
        ./${init}
        
    - name: Test the app in HTTP only
      run: |
        set -x
        export stack=${stackName}-${GITHUB_SHA}
        script=.github/bin/check-http.sh
        ./$script

    - name: Remove the AWS infrastructure
      run: |
        set -x
        aws cloudformation delete-stack --stack-name ${stackName}-${GITHUB_SHA}

  kubernetes-http:
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"
    env:
      stackName: kubernetes-http
    runs-on: ubuntu-latest

    steps:

    - name: "Configure AWS Credentials"
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: # optional
        aws-region: ap-south-1
        mask-aws-account-id: true
        role-to-assume: # optional
        role-duration-seconds: # optional
        role-session-name: # optional
        role-external-id: # optional
      
    - name: Checkout branch
      uses: actions/checkout@v2

    - name: Install aws + cluster + app in Kubernetes mode and HTTP only
      run: |
        init=bin/init-start.sh
        chmod +x ${init}
        sed -i /mode=swarm/d ${init}
        sed -i /template=https/d ${init}
        sed -i /template=http-3/d ${init}
        sed -i /template=http-2/d ${init}
        sed -i s/master/test/ ${init}
        sed -i /TypeMaster=t3a.nano/d ${init}
        sed -i /TypeWorker=t3a.micro/d ${init}
        sed -i s/export' 'stack=.*$/export' 'stack=${stackName}-${GITHUB_SHA}/ ${init}
        ./${init}
        
    - name: Test the app in HTTP only
      run: |
        set -x
        export stack=${stackName}-${GITHUB_SHA}
        script=.github/bin/check-http.sh
        ./$script

    - name: Remove the AWS infrastructure
      run: |
        set -x
        aws cloudformation delete-stack --stack-name ${stackName}-${GITHUB_SHA}

  swarm-https:
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"
    env:
      stackName: swarm-https

    runs-on: ubuntu-latest

    steps:

    - name: "Configure AWS Credentials"
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: # optional
        aws-region: ap-south-1
        mask-aws-account-id: true
        role-to-assume: # optional
        role-duration-seconds: # optional
        role-session-name: # optional
        role-external-id: # optional
      
    - name: Checkout branch
      uses: actions/checkout@v2

    - name: Install aws + cluster + app in Swarm mode in HTTPS only
      run: |
        init=bin/init-start.sh
        chmod +x ${init}
        sed -i /mode=kubernetes/d ${init}
        sed -i /template=http-/d ${init}
        sed -i /template=https-3/d ${init}
        sed -i /template=https-2/d ${init}
        sed -i s/master/test/ ${init}
        sed -i /TypeMaster=t3a.micro/d ${init}
        sed -i /TypeWorker=t3a.micro/d ${init}
        sed -i s/export' 'stack=.*$/export' 'stack=${stackName}-${GITHUB_SHA}/ ${init}
        ./${init}
        
    - name: Test the app in HTTPS only
      run: |
        set -x
        export stack=${stackName}-${GITHUB_SHA}
        script=.github/bin/check-https.sh
        ./$script

    - name: Remove the AWS infrastructure
      run: |
        set -x
        aws cloudformation delete-stack --stack-name ${stackName}-${GITHUB_SHA}

  kubernetes-https:
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"
    env:
      stackName: kubernetes-https
    runs-on: ubuntu-latest

    steps:

    - name: "Configure AWS Credentials"
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: # optional
        aws-region: ap-south-1
        mask-aws-account-id: true
        role-to-assume: # optional
        role-duration-seconds: # optional
        role-session-name: # optional
        role-external-id: # optional
      
    - name: Checkout branch
      uses: actions/checkout@v2

    - name: Install aws + cluster + app in Kubernetes mode in HTTPS only
      run: |
        init=bin/init-start.sh
        chmod +x ${init}
        sed -i /mode=swarm/d ${init}
        sed -i /template=http-/d ${init}
        sed -i /template=https-3/d ${init}
        sed -i /template=https-2/d ${init}
        sed -i s/master/test/ ${init}
        sed -i /TypeMaster=t3a.nano/d ${init}
        sed -i /TypeWorker=t3a.micro/d ${init}
        sed -i s/export' 'stack=.*$/export' 'stack=${stackName}-${GITHUB_SHA}/ ${init}
        ./${init}
        
    - name: Test the app in HTTPS only
      run: |
        set -x
        export stack=${stackName}-${GITHUB_SHA}
        script=.github/bin/check-https.sh
        ./$script

    - name: Remove the AWS infrastructure
      run: |
        set -x
        aws cloudformation delete-stack --stack-name ${stackName}-${GITHUB_SHA}
